
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the user is an admin via custom claims
    function isAdmin() {
      return request.auth.token.admin == true;
    }

    // Users can only read/update their own profile. Admins can read/write any.
    match /users/{userId} {
      allow read, update: if request.auth.uid == userId || isAdmin();
      allow create, delete: if isAdmin();
    }

    // Admins can manage agents fully.
    match /agents/{agentId} {
        allow read, write: if isAdmin();
    }

    // Battles can be read by any authenticated user.
    // Creation/updates are handled by server-side logic (transactions), but admins can override.
    match /battles/{battleId} {
        allow read: if request.auth != null;
        allow write: if isAdmin(); // Allow admins to make changes if needed
    }

    // Transactions can be read by the user they belong to, or any admin.
    // Creation/updates are handled by server-side logic, but admins have full control.
    match /transactions/{transactionId} {
        allow read: if request.auth.uid == resource.data.userId || isAdmin();
        allow write: if isAdmin();
    }
    
    // Referrals can be read by the referrer or the referred user, or an admin.
    match /referrals/{referralId} {
        allow read: if request.auth.uid == resource.data.referrerId || request.auth.uid == resource.data.referredId || isAdmin();
        allow write: if isAdmin();
    }

    // Payment UPIs can only be managed by admins.
    match /payment_upis/{upiId} {
        allow read, write: if isAdmin();
    }

    // App settings (config) can be read by anyone, but only written to by admins.
    match /config/{docId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
  }
}
