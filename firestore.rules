rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
  
    // Function to check if the user is the owner of the document.
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }
    
    // Users can read their own data and update their own document (for 'lastSeen').
    // Creating or deleting users should be handled by the server.
    match /users/{userId} {
      allow read: if isOwner(userId);
      allow update: if isOwner(userId); // Allows updating fields like lastSeen.
      allow create, delete: if false; // Disallow client-side creation/deletion.
    }
    
    // Transactions should be created by the server.
    // Users can read their own transaction history.
    match /transactions/{transactionId} {
      allow read: if request.auth != null && resource.data.userId == request.auth.uid;
      allow create, update, delete: if false;
    }

    // Battles can be read by any authenticated user.
    // Creating, updating, or deleting battles is handled by server-side logic for security.
    match /battles/{battleId} {
      allow read: if request.auth != null;
      allow create, update, delete: if false;
    }

    // Referrals can only be read by the referrer or the referred user.
    match /referrals/{referralId} {
        allow read: if request.auth != null && (request.auth.uid == resource.data.referrerId || request.auth.uid == resource.data.referredId);
        allow create, update, delete: if false;
    }
    
    // App settings and UPI info can be read by any authenticated user.
    // Only admins should write to these, which is handled server-side.
    match /config/{docId} {
       allow read: if request.auth != null;
       allow write: if false;
    }
     match /payment_upis/{upiId} {
       allow read: if request.auth != null;
       allow write: if false;
    }

    // Agents collection should not be readable or writable from the client at all for security.
    // All agent operations are handled by the server/admin panel logic.
    match /agents/{agentId} {
        allow read, write: if false;
    }
  }
}
